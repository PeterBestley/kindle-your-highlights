kindle-your-highlights
============
It scrapes highlights from kinde.amazon.com web site.

**required gems**

* Mechanize
* Nokogiri

**usage examples - object operation**

	require 'kindle-your-highlights'

	# to create a new KindleYourHighlights object, give it your Amazon email address and password	
	kindle = KindleYourHighlights.new("foo@bar.com", "password")
	
	kindle.highlights.each do |highlight|
		highlight.annotation_id # => a unique value for each highlight, generated by Amazon
		highlight.content # => the actual highlight text
		highlight.asin # => the Amazon ASIN for the highlight's product
		highlight.author # => author of the book from which the highlight is taken
		highlight.title # => title of the book from which the highlight is taken
	end

**usage examples - xml/html outputs**

	require 'kindle-your-highlights'

	# to create a new KindleYourHighlights object, give it your Amazon email address and password
	kindle = KindleYourHighlights.new("foo@bar.com", "password", { :page_limit => 100, :day_limit => 31, :wait_time => 2 }) do | h |
		puts "loading... [#{h.books.last.title}] - #{h.books.last.last_update}"
	end

	# xml outputs (needs to create ./xml folder in advance)
	KindleYourHighlights::XML.new(:list => kindle.list, :output_path => "./xml", :file_name => "out.xml").output

	# html outputs (needs to create ./html folder in advance)
	KindleYourHighlights::HTML.new(:list => kindle.list, :output_path => "./html", :file_name => "out.html").output

**usage examples - differential save/load**

	require 'kindle-your-highlights'

	# to create a new KindleHighlight object, give it your Amazon email address and password
	kindle = KindleYourHighlights.new("foo@bar.com", "password", { :page_limit => 100, :wait_time => 2 }) do | h |
		puts "loading... [#{h.books.last.title}]"
	end

	# load previous file, merge with the new one, and dump it again.
	if File.exist?("out.dump")
		list = KindleYourHighlights::List.load("out.dump")
		kindle.merge!(list)
	end

	KindleYourHighlights::HTML.new(:list => kindle.list, :file_name => "out.html").output
	kindle.list.dump("out.dump")

#### options
- page_limit : specifies maximum number of pages (books) to be loaded
- day_limit : specifies maximum number of days to be retrieved, based on "Last annotated on" date and today
- wait_time : specifies wait time between each page load in seconds (default is 5 seconds)
- block : call-back function which for each page load completion

**output - xml**

XML output example

	<?xml version="1.0"?>
	<books>
		<book>
			<asin>ASIN</asin>
			<title>TITLE</title>
			<author>AUTHOR</author>
			<highlights>
				<annotation_id>ANNOTATION_ID1</annotation_id>
				<content>CONTENT1</content>
			</highlights>
			<highlights>
				<annotation_id>ANNOTATION_ID2</annotation_id>
				<content>CONTENT2</content>
			</highlights>
		</book>
	</books>

**output - html**

http://cloud.github.com/downloads/parroty/kindle-highlights/kindle_highlight_html.png

**updates**

* Initial upload (0.1.0) 

**notes**

This lib was originally from "https://github.com/speric/kindle-highlights", but I created a separate project for adding features and for changing code formats.